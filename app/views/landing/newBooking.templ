package landing

import (
	"explorer/app/types"
	"fmt"
	"strconv"
	"time"
)

templ NewBooking(camp types.CampSite, user types.User, allService []types.Service) {
	{{ servicesMap := map[string]float64{} }}
	{{ serviceQuantity := map[string]int{} }}
	{{for _, s := range allService {
	servicesMap[strconv.Itoa(int(s.ID))] = s.Price
	serviceQuantity[strconv.Itoa(int(s.ID))] = 0
}
	}}
	{{data := map[string]interface{}{
	"campPrice":        camp.Price,
	"guests":           0,
	"services":         serviceQuantity,
	"servicesData":     servicesMap,
	"termsOpen":        false,
	"showPaymentModal": false,
	"paymentMethod":    "",
	"userStatus":       "",
	"showConfirmModal": false,
}
	}}
	<div
		x-data={ templ.JSONString(data) }
		x-init={ `total = () => {
	const guestsFactor = 1 + Number(guests);
	let servicesTotal = 0;
	for (const id in services) {
		servicesTotal += (services[id] || 0) * (servicesData[id] || 0);
	}
	return (campPrice * guestsFactor + servicesTotal).toFixed(2);
};
submitBooking = (method) => {
	paymentMethod = method;
	userStatus='booked'
	$nextTick(() => { $refs.bookingForm.submit(); });
};` }
	>
		<section class="relative min-h-screen">
			<!-- Background and form layout -->
			<div class="absolute inset-0 z-0">
				<div class="w-full h-full bg-cover bg-center" style="background-image: url('https://images.unsplash.com/photo-1500673922987-e212871fec22?auto=format&fit=crop&w=2000&q=80')"></div>
				<div class="absolute inset-0 bg-gradient-to-b from-black/60 to-black/30"></div>
			</div>
			<div class="relative z-10 min-h-screen py-12 px-4 flex items-center justify-center">
				<div class="max-w-4xl w-full grid grid-cols-1 lg:grid-cols-3 gap-8 bg-white/90 backdrop-blur-md rounded-lg p-6 shadow-lg">
					<!-- Booking Form -->
					<div class="lg:col-span-2">
						<div class="bg-white rounded-lg shadow-md overflow-hidden">
							<div class="bg-green-700 text-white p-6">
								<h1 class="text-2xl font-bold flex items-center gap-2">
									ðŸ“… Book Your Camping Adventure
								</h1>
								<p class="text-green-100">Fill out the form below to reserve your perfect camping spot</p>
							</div>
							<div class="p-6">
								@BookingForm(camp, user, allService)
							</div>
						</div>
					</div>
					<!-- Booking Summary -->
					<div>
						<div class="shadow-lg bg-white rounded-lg sticky top-8 p-5 space-y-4">
							<h2 class="text-lg font-semibold flex items-center gap-2">ðŸ§¾ Booking Summary</h2>
							<div class="text-sm text-gray-600 space-y-2">
								<div class="flex justify-between">
									<span>Base Rate</span>
									<span class="font-medium">{ fmt.Sprintf("%.2f", camp.Price) } TND</span>
								</div>
								<div class="flex justify-between">
									<span>Guests</span>
									<span class="font-medium" x-text="guests"></span>
								</div>
								<div class="flex justify-between">
									<span>Services</span>
									<span
										class="font-medium"
										x-text="(() => {
										let sum = 0;
										for (const id in services) {
											sum += (services[id] || 0) * (servicesData[id] || 0);
										}
										return sum.toFixed(2);
									})() + ' TND'"
									></span>
								</div>
							</div>
							<div class="border-t pt-2 mt-2">
								<div class="flex justify-between text-lg font-semibold">
									<span>Total</span>
									<span class="text-green-800 font-bold" x-text="total() + ' TND'"></span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		@PaymentMethod()
		@ConfirmationCachPayement()
	</div>
}

templ BookingForm(camp types.CampSite, user types.User, Allservice []types.Service) {
	<form
		action="/user/bookings"
		method="post"
		x-ref="bookingForm"
		@submit.prevent="showPaymentModal = true"
		class="space-y-6"
	>
		<!-- Hidden Fields -->
		<input type="hidden" name="campID" value={ strconv.Itoa(camp.ID) }/>
		<input type="hidden" name="startDate" value={ camp.AvailableFrom.Format("2006-01-02") }/>
		<input type="hidden" name="endDate" value={ camp.AvailableTo.Format("2006-01-02") }/>
		<input type="hidden" name="bookingDate" value={ time.Now().Format("2006-01-02") }/>
		<input type="hidden" name="totalPrice" :value="total()"/>
		<input type="hidden" name="guestsCount" :value="guests"/>
		<input type="hidden" name="payment_method" :value="paymentMethod"/>
		<input type="hidden" name="userStatus" :value="userStatus"/>
		<!-- User Profile Info -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
			<div>
				<label class="text-sm text-gray-700">First Name</label>
				<input type="text" readonly class="w-full bg-gray-100 px-3 py-2 border rounded-md" value={ user.FirstName }/>
			</div>
			<div>
				<label class="text-sm text-gray-700">Last Name</label>
				<input type="text" readonly class="w-full bg-gray-100 px-3 py-2 border rounded-md" value={ user.LastName }/>
			</div>
		</div>
		<!-- Camping Date Range -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
			<div>
				<label class="text-sm text-gray-700">Start Date</label>
				<input type="text" readonly class="w-full bg-gray-100 px-3 py-2 border rounded-md" value={ camp.AvailableFrom.Format("2006-01-02") }/>
			</div>
			<div>
				<label class="text-sm text-gray-700">End Date</label>
				<input type="text" readonly class="w-full bg-gray-100 px-3 py-2 border rounded-md" value={ camp.AvailableTo.Format("2006-01-02") }/>
			</div>
		</div>
		<!-- Number of Guests -->
		<div>
			<label for="guests" class="block text-sm font-medium text-gray-700">Number of Guests</label>
			<select
				name="guests"
				id="guests"
				x-model="guests"
				required
				class="mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"
			>
				<option value="">Select number of guests</option>
				for i:=0; i<= 10;i++ {
					<option value={ strconv.Itoa(i) }>{ i }</option>
				}
				<option value="10+">10+</option>
			</select>
			<!-- Guest Details Section -->
			<div class="mt-6 space-y-4">
				<template x-for="i in Number(guests)">
					<div class="p-4 border rounded-lg bg-gray-50 space-y-2">
						<h4 class="font-semibold text-sm text-gray-700">Guest <span x-text="i"></span></h4>
						<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
							<input type="text" :name="'guests[' + (i-1) + '][first_name]'" placeholder="First Name" required class="w-full border px-3 py-2 rounded-md"/>
							<input type="text" :name="'guests[' + (i-1) + '][last_name]'" placeholder="Last Name" required class="w-full border px-3 py-2 rounded-md"/>
							<input type="text" :name="'guests[' + (i-1) + '][cin]'" placeholder="CIN (optional)" class="w-full border px-3 py-2 rounded-md"/>
						</div>
					</div>
				</template>
			</div>
		</div>
		<!-- Additional Services -->
		<div>
			<h3 class="text-sm font-semibold text-gray-800 mb-2">Additional Services</h3>
			<div class="space-y-3 text-sm text-gray-700">
				for _, s := range Allservice {
					<input type="hidden" name={ fmt.Sprintf("service[%d]", s.ID) } :value={ fmt.Sprintf("services[%d]", s.ID) }/>
					<div class="flex items-center justify-between gap-4 border p-3 rounded-md shadow-sm">
						<!-- Service name and price -->
						<div class="flex-1">
							<div class="font-medium text-gray-800">{ s.Name }</div>
							<div class="text-xs text-gray-500">TND { fmt.Sprintf("%.2f", s.Price) } each</div>
						</div>
						<!-- Quantity controls -->
						<div class="flex items-center gap-2">
							<button
								type="button"
								class="w-8 h-8 bg-gray-200 hover:bg-gray-300 text-lg rounded-md"
								@click={ fmt.Sprintf("services[%d] = Math.max(0, (services[%d] || 0) - 1); services = { ...services }", s.ID, s.ID) }
							>-</button>
							<input
								type="text"
								min="0"
								x-model.number={ fmt.Sprintf("services[%d]", s.ID) }
								class="w-16 text-center border border-gray-300 rounded-md py-1"
							/>
							<button
								type="button"
								class="w-8 h-8 bg-gray-200 hover:bg-gray-300 text-lg rounded-md"
								@click={ fmt.Sprintf("services[%d] = (services[%d] || 0) + 1; services = { ...services }", s.ID, s.ID) }
							>+</button>
						</div>
					</div>
				}
			</div>
		</div>
		<!-- Special Requests -->
		<div>
			<label for="specialRequest" class="block text-sm font-medium text-gray-700">Special Requests</label>
			<textarea name="specialRequest" id="specialRequest" rows="3" placeholder="Any special requests?" class="mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-green-500 focus:border-green-500"></textarea>
		</div>
		<!-- Submit Button -->
		<div>
			<button type="submit" class="w-full bg-green-700 hover:bg-green-800 text-white font-medium py-3 px-6 rounded-md">
				ðŸ“… Confirm Booking
			</button>
		</div>
	</form>
}

templ PaymentMethod() {
	<div
		x-show="showPaymentModal"
		x-transition
		class="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm"
	>
		<div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-md relative">
			<button
				@click="showPaymentModal = false"
				class="absolute top-3 right-3 text-gray-400 hover:text-red-500 text-xl font-bold"
			>
				&times;
			</button>
			<h2 class="text-xl font-bold text-gray-800 mb-4">Choose Payment Method</h2>
			<p class="text-sm text-gray-600 mb-6">Please select how you'd like to pay for your booking:</p>
			<!-- âœ… Pay with Cash: Triggers form submit -->
			<button
				type="button"
				@click="paymentMethod = 'cash';showPaymentModal = false; showConfirmModal = true"
				class="w-full bg-yellow-600 hover:bg-yellow-700 text-white font-semibold py-2 px-4 rounded mb-4"
			>
				ðŸ’µ Pay with Cash (on site)
			</button>
			<!-- ðŸ’³ Online Disabled -->
			<button
				disabled
				class="w-full bg-gray-300 text-gray-600 py-2 px-4 rounded cursor-not-allowed"
			>
				ðŸ’³ Pay Online (Coming Soon)
			</button>
		</div>
	</div>
}

templ ConfirmationCachPayement() {
	<div>
		<!-- Modal Backdrop -->
		<div
			x-show="showConfirmModal"
			x-transition
			class="fixed inset-0 bg-black/50 z-40"
			@click="showConfirmModal = false"
		></div>
		<!-- Modal Content -->
		<div
			x-show="showConfirmModal"
			x-transition
			class="fixed inset-0 z-50 flex items-center justify-center"
			style="backdrop-filter: blur(3px);"
		>
			<div class="bg-white p-6 rounded-lg shadow-xl max-w-md w-full space-y-4">
				<h2 class="text-xl font-bold text-center text-gray-800">Confirm Your Booking</h2>
				<p class="text-gray-600 text-sm text-center">Are you sure you want to book with cash payment? An admin will need to confirm it.</p>
				<div class="flex justify-center gap-4 mt-4">
					<!-- Cancel -->
					<button
						@click="showConfirmModal = false"
						type="button"
						class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded-md"
					>
						No
					</button>
					<!-- Confirm / Submit the actual form -->
					<button
						type="button"
						@click="submitBooking('cash')"
						class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md"
					>
						Yes, Confirm
					</button>
				</div>
			</div>
		</div>
	</div>
}
