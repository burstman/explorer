package landing

import (
	"explorer/app/types"
	"fmt"
	"strconv"
)

templ BookingListAdmin(users []types.User) {
	<section class="px-6 py-10 max-w-7xl mx-auto">
		<!-- Filters -->
		<form hx-get="/admin/bookings/search" hx-target="#booking-results" class="mb-4 flex flex-wrap gap-3 items-center">
			<button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Search</button>
			<input type="text" name="q" placeholder="Search..." class="px-3 py-2 border rounded w-48"/>
			<select name="payment_status" class="px-3 py-2 border rounded">
				<option>All Payment Statuses</option>
				<option>Pending</option>
				<option>Paid</option>
			</select>
			<select name="user_status" class="px-3 py-2 border rounded">
				<option>All User Statuses</option>
				<option>Verified</option>
				<option>Unverified</option>
			</select>
		</form>
		<!-- Booking Table -->
		<div class="overflow-x-auto">
			<table class="min-w-full text-sm text-left text-gray-200">
				<thead class="bg-gray-800 uppercase text-xs text-gray-400">
					<tr>
						<th class="px-4 py-2">User ID</th>
						<th class="px-4 py-2">Customer</th>
						<th class="px-4 py-2">Camp</th>
						<th class="px-4 py-2">Guests</th>
						<th class="px-4 py-2">Status</th>
						<th class="px-4 py-2">Payment Status</th>
						<th class="px-4 py-2">Payment Method</th>
						<th class="px-4 py-2">Actions</th>
					</tr>
				</thead>
				@BookingTableRows(users)
			</table>
		</div>
		<!-- Add/Edit Guest Form -->
		<div id="guest-edit-form" class="mt-6"></div>
	</section>
}

// In landing/booking_rows.templ
templ BookingTableRows(users []types.User) {
	<tbody id="booking-results" class="bg-gray-900 divide-y divide-gray-800">
		for _, user := range users {
			if len(user.Bookings) == 0 {
				<tr>
					<td class="px-4 py-2 font-medium text-white">{ user.ID }</td>
					<td class="px-4 py-2 text-white">{ user.FirstName } { user.LastName }</td>
					<td class="px-4 py-2 italic text-gray-400" colspan="5">No bookings</td>
					<td class="px-4 py-2 text-right">
						<button
							@click="modalOpen = true"
							hx-get={ "/admin/bookings/" + fmt.Sprint(user.ID) + "/new" }
							hx-target="#modal-content"
							hx-swap="innerHTML"
							class="text-green-400 hover:text-green-200"
						>‚ûï Add Booking</button>
					</td>
				</tr>
			} else {
				for _, booking := range user.Bookings {
					<tr>
						<td class="px-4 py-2 font-medium text-white">{ user.ID }</td>
						<td class="px-4 py-2 text-white">{ user.FirstName } { user.LastName }</td>
						<td class="px-4 py-2 text-white">{ booking.Camp.Name }</td>
						<td class="px-4 py-2 text-white">{ len(booking.Guests) }</td>
						<td class="px-4 py-2">
							<span class="bg-blue-500 text-white px-2 py-1 rounded text-xs">{ booking.Status }</span>
						</td>
						<td class="px-4 py-2">
							<span class="bg-blue-500 text-white px-2 py-1 rounded text-xs">{ booking.PaymentStatus }</span>
						</td>
						<td class="px-4 py-2">
							<span class="bg-blue-500 text-white px-2 py-1 rounded text-xs">{ booking.PaymentMethod }</span>
						</td>
						<td class="px-4 py-2 space-x-2 text-white">
							<button
								@click="modalOpen = true"
								hx-get={ "/admin/bookings/" + fmt.Sprint(booking.ID) + "/showDetail" }
								hx-target="#modal-content"
								hx-swap="innerHTML"
								class="hover:text-green-400"
							>üëÅ</button>
							<button
								@click="modalOpen = true"
								hx-get={ "/admin/bookings/" + fmt.Sprint(booking.ID) + "/edit" }
								hx-target="#modal-content"
								hx-swap="innerHTML"
								class="hover:text-yellow-400"
							>‚úèÔ∏è</button>
							<button
								hx-delete={ "/admin/bookings/list/" + fmt.Sprint(booking.ID) }
								hx-confirm="Are you sure?"
								hx-target="#booking-results"
								hx-swap="outerHTML"
								class="hover:text-red-400"
							>üóëÔ∏è</button>
						</td>
					</tr>
				}
			}
		}
	</tbody>
}

templ BookingDetailModal(booking types.Bookings) {
	<div class="bg-white p-6 rounded-lg shadow-lg max-w-2xl w-full space-y-4">
		<h2 class="text-2xl font-bold text-gray-800 mb-4">Booking Details</h2>
		<!-- General Info -->
		<div class="space-y-2 text-sm text-gray-700">
			<p><strong>Booking ID:</strong> { booking.ID }</p>
			<p><strong>Customer:</strong> { booking.User.FirstName } { booking.User.LastName } ({ booking.User.Email })</p>
			<p><strong>Camp:</strong> { booking.Camp.Name }</p>
			<p><strong>Booking Date:</strong> { booking.CreatedAt.Format("2006-01-02 15:04") }</p>
			<p><strong>Status:</strong> <span class="bg-blue-500 text-white px-2 py-1 rounded text-xs">{ booking.Status }</span></p>
			<p>
				<strong>Payment:</strong>
				<span class="bg-green-600 text-white px-2 py-1 rounded text-xs">{ booking.PaymentMethod }</span>
			</p>
			<p>
				<strong>Payment Status:</strong>
				<span class="ml-2 bg-purple-600 text-white px-2 py-1 rounded text-xs">{ booking.PaymentStatus }</span>
			</p>
			<p><strong>Total Price:</strong> { fmt.Sprintf("%.2f", booking.TotalPrice) } TND</p>
			<p><strong>Special Request:</strong> { booking.SpecialRequest }</p>
		</div>
		<!-- Guests -->
		<div class="mt-4">
			<h3 class="text-lg font-semibold text-gray-800 mb-2">üë§ Guests ({ len(booking.Guests) })</h3>
			<ul class="list-disc list-inside text-sm text-gray-700 space-y-1">
				for _, g := range booking.Guests {
					if g.CIN!="" {
						<li>{ g.FirstName } { g.LastName } - CIN: { g.CIN } </li>
					} else {
						<li>{ g.FirstName } { g.LastName }</li>
					}
				}
			</ul>
		</div>
		<!-- Services -->
		if len(booking.Services) > 0 {
			<div class="mt-4">
				<h3 class="text-lg font-semibold text-gray-800 mb-2">üõ†Ô∏è Services</h3>
				<ul class="list-disc list-inside text-sm text-gray-700 space-y-1">
					for _, bs := range booking.Services {
						<li>{ bs.Service.Name } √ó { bs.Quantity } ‚Üí { fmt.Sprintf("%.2f", bs.Service.Price*float64(bs.Quantity)) } TND</li>
					}
				</ul>
			</div>
		}
		<!-- Close Button -->
		<div class="text-right pt-4">
			<button
				@click="modalOpen = false"
				class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded"
			>Close</button>
		</div>
	</div>
}

templ EditBookingModal(booking types.Bookings, camps []types.CampSite) {
	<form
		hx-put={ "/admin/bookings/" + fmt.Sprint(booking.ID) }
		hx-target="#modal-content"
		hx-swap="innerHTML"
		class="space-y-6"
	>
		<!-- Campsite Selection -->
		<label class="block text-sm font-medium text-gray-700">Campsite</label>
		<select name="camp_id" class="w-full border rounded-md px-3 py-2">
			for _, camp := range camps {
				<option value={ camp.ID } selected={ int(booking.CampID) == camp.ID }>
					{ camp.Name } ({ camp.AvailableFrom.Format("2006-01-02") })
				</option>
			}
		</select>
		<!-- Guests -->
		<h3 class="text-sm font-semibold">Guests</h3>
		for i, guest := range booking.Guests {
			<div class="grid grid-cols-4 gap-3 items-center">
				<input type="hidden" name={ fmt.Sprintf("guests[%d][id]", i) } value={ fmt.Sprint(guest.ID) }/>
				<input type="text" name={ fmt.Sprintf("guests[%d][first_name]", i) } value={ guest.FirstName } class="border rounded px-2 py-1"/>
				<input type="text" name={ fmt.Sprintf("guests[%d][last_name]", i) } value={ guest.LastName } class="border rounded px-2 py-1"/>
				<input type="text" name={ fmt.Sprintf("guests[%d][cin]", i) } value={ guest.CIN } class="border rounded px-2 py-1"/>
			</div>
		}
		<!-- Admin can add new blank guests in frontend via JS (or expose add/remove buttons) -->
		<!-- Services -->
		<h3 class="text-sm font-semibold">Services</h3>
		for i, bs := range booking.Services {
			<div class="grid grid-cols-5 gap-3 items-center">
				<input type="hidden" name={ fmt.Sprintf("services[%d][id]", i) } value={ fmt.Sprint(bs.ID) }/>
				<input type="hidden" name={ fmt.Sprintf("services[%d][service_id]", i) } value={ fmt.Sprint(bs.ServiceID) }/>
				<span class="col-span-2 text-gray-800">{ bs.Service.Name }</span>
				<input type="number" name={ fmt.Sprintf("services[%d][quantity]", i) } value={ fmt.Sprint(bs.Quantity) } class="border rounded px-2 py-1 w-20"/>
				<span class="text-sm text-gray-500">{ fmt.Sprintf("%.2f", bs.Service.Price) } TND</span>
			</div>
		}
		<!-- Special Requests -->
		<label class="block text-sm font-medium text-gray-700">Special Request</label>
		<textarea name="special_request" class="w-full border px-3 py-2 rounded" rows="2">{ booking.SpecialRequest }</textarea>
		<!-- Total (from backend) -->
		<div class="border-t pt-2 mt-2 text-right">
			<span class="text-lg font-semibold">Total: </span>
			<span class="text-green-700 font-bold">{ fmt.Sprintf("%.2f TND", booking.TotalPrice) }</span>
		</div>
		<!-- Save -->
		<div class="text-right">
			<button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-md">üíæ Save</button>
		</div>
	</form>
}

templ BookingAdminCreateModal(user types.User, AvailableServices []types.Service, camps []types.CampSite) {
	{{ servicesMap := map[string]float64{} }}
	{{ serviceQuantity := map[string]int{} }}
	{{for _, s := range AvailableServices {
	servicesMap[strconv.Itoa(int(s.ID))] = s.Price
	serviceQuantity[strconv.Itoa(int(s.ID))] = 0
}
	}}
	{{data := map[string]interface{}{
	"guests":       0,
	"services":     serviceQuantity,
	"servicesData": servicesMap,
}
	}}
	<div
		x-data={ templ.JSONString(data) }
		x-init={ `total = () => {
			let servicesTotal = 0;
			for (const id in services) {
				servicesTotal += (services[id] || 0) * (servicesData[id] || 0);
			}
			return servicesTotal.toFixed(2);
		};` }
		class="p-6 bg-white rounded-md shadow-md"
	>
		<form method="post" action="/admin/bookings/create" class="space-y-6">
			<h2 class="text-xl font-bold mb-4">Admin Booking</h2>
			<!-- Camp Dropdown -->
			<label for="camp_id" class="block mb-1">Select Camp</label>
			@CampDropdown(camps)
			<!-- Hidden inputs -->
			<input type="hidden" name="userID" value={ strconv.Itoa(int(user.ID)) }/>
			<input type="hidden" name="totalPrice" :value="total()"/>
			<input type="hidden" name="guestsCount" :value="guests"/>
			<!-- User Info -->
			<div class="grid grid-cols-2 gap-4">
				<div>
					<label class="text-sm text-gray-600">First Name</label>
					<input type="text" value={ user.FirstName } readonly class="w-full border rounded px-2 py-1 bg-gray-100"/>
				</div>
				<div>
					<label class="text-sm text-gray-600">Last Name</label>
					<input type="text" value={ user.LastName } readonly class="w-full border rounded px-2 py-1 bg-gray-100"/>
				</div>
			</div>
			<!-- Guests -->
			<div>
				<label class="text-sm font-medium text-gray-700">Number of Guests</label>
				<select x-model="guests" name="guests" class="mt-1 block w-full px-3 py-2 border rounded-md">
					<option value="">Select</option>
					for i := 0; i <= 10; i++ {
						<option value={ i }>{ i }</option>
					}
					<option value="10+">10+</option>
				</select>
			</div>
			<!-- Guests Info (reuse) -->
			@GuestFormFields()
			<!-- Services (reuse) -->
			@AdditionalServices(AvailableServices)
			<!-- Submit -->
			<div>
				<button class="w-full bg-green-700 text-white px-4 py-2 rounded-md" type="submit">
					‚ûï Add Booking
				</button>
			</div>
		</form>
	</div>
}

templ CampDropdown(camps []types.CampSite) {
	<select name="camp_id" class="border p-2 rounded w-full">
		<option disabled selected>Select a campsite</option>
		for _, camp := range camps {
			<option value={ camp.ID }>{ camp.Name } - { camp.Location }</option>
		}
	</select>
}
